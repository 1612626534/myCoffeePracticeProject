<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dao.user.IUserDAO">
    <resultMap id="userProfile" type="com.bean.user.UserPO">
        <id column="USER_ID" property="id" />
        <result column="USER_NAME" property="name" />
        <result column="PASSWORD" property="password" />
        <result column="EMAIL" property="email" />
        <result column="IS_ACCOUNT_NON_EXPIRED" property="isAccountNonExpired" />
        <result column="IS_ACCOUNT_NON_LOCKED" property="isAccountNonLocked" />
        <result column="IS_CREDENTIALS_NON_EXPIRED" property="isCredentialsNonExpired" />
        <result column="IS_ENABLED" property="isEnabled" />
        <result column="MODIFIED_DATE" property="modifiedDate" />
        <association column="ROLE_ID" property="role" resultMap="role" />
    </resultMap>

    <resultMap id="role" type="com.bean.user.RolePO">
        <id column="ROLE_ID" property="id" />
        <result column="ROLE_NAME" property="name" />
        <collection property="permissionList" ofType="com.bean.user.PermissionPO" >
            <id column="PERMISSION_ID" property="id" />
            <result column="PERMISSION_NAME" property="name" />
        </collection>
    </resultMap>

    <select id="getUserByEmail" resultMap="userProfile">
        SELECT
            user_profile.ID                             AS USER_ID,
            user_profile.EMAIL                          AS EMAIL,
            user_profile.IS_ACCOUNT_NON_EXPIRED         AS IS_ACCOUNT_NON_EXPIRED,
            user_profile.IS_ACCOUNT_NON_LOCKED          AS IS_ACCOUNT_NON_LOCKED,
            user_profile.IS_CREDENTIALS_NON_EXPIRED     AS IS_CREDENTIALS_NON_EXPIRED,
            user_profile.IS_ENABLED                     AS IS_ENABLED,
            user_profile.`PASSWORD`                     AS `PASSWORD`,
            user_profile.`NAME`                         AS USER_NAME,
            user_profile.MODIFIED_DATE                  AS MODIFIED_DATE,
            user_profile.ROLE_ID                        AS USER_ROLE_ID,
            role.ID                                     AS ROLE_ID,
            role.`NAME`                                 AS ROLE_NAME,
            permission.ID                               AS PERMISSION_ID,
            permission.`NAME`                           AS PERMISSION_NAME
        FROM user_profile
            JOIN role ON user_profile.ROLE_ID = role.ID
            LEFT JOIN role_permission_bridge ON role.ID = role_permission_bridge.ROLE_ID
            LEFT JOIN permission ON role_permission_bridge.PERMISSION_ID = permission.ID
        WHERE
            EMAIL = #{email};
    </select>
</mapper>